(()=>{const t="abnormalhumanbean",e="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",n=432e6;(()=>{const a=`githubRepos_${t}`,o=JSON.parse(localStorage.getItem(a));o&&Date.now()-o.timestamp<n?i(o.data):fetch(`https://api.github.com/users/${t}/repos`,{headers:{Authorization:`token ${e}`}}).then((t=>{if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return t.json()})).then((t=>{if(!Array.isArray(t))throw new TypeError("Expected an array of repositories");localStorage.setItem(a,JSON.stringify({data:t,timestamp:Date.now()})),i(t)})).catch((t=>{console.error("Error fetching data:",t)}));const i=t=>{let e=document.getElementById("repoTableBody");e.innerHTML="",t.forEach((t=>{new Date(t.updated_at).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"});let n=`<tr>\n            <td style="font-weight: bold;">${t.name}</td>\n            <td>${t.language?t.language:"N/A"}</td>\n            <td>${t.description?t.description:"No description"}</td>\n            <td><a href="${t.html_url}"> link </a></td>\n            <td id="lastCommit_${t.name}">Fetching last commit...</td>\n            <td id="commitsSince_${t.name}">Fetching commits...</td>\n            <td><ul id="files_${t.name}"></ul></td>\n        </tr>`;e.innerHTML+=n,m(t),s(t)}))},m=a=>{const o=`githubCommits_${t}_${a.name}`,i=JSON.parse(localStorage.getItem(o));if(i&&Date.now()-i.timestamp<n)r(i.data,a.name);else{let n=1,i=0;const m=()=>{fetch(`https://api.github.com/repos/${t}/${a.name}/commits?per_page=100&page=${n}`,{headers:{Authorization:`token ${e}`}}).then((t=>t.json())).then((t=>{0===t.length?(localStorage.setItem(o,JSON.stringify({data:i,timestamp:Date.now()})),document.getElementById(`commitsSince_${a.name}`).textContent=i):(i+=t.length,n++,m())})).catch((t=>{console.error("Error fetching commits:",t),document.getElementById(`commitsSince_${a.name}`).textContent="Unable to fetch commits"}))};m(),fetch(`https://api.github.com/repos/${t}/${a.name}/commits?per_page=100`,{headers:{Authorization:`token ${e}`}}).then((t=>t.json())).then((t=>{let e=t.length>0?new Date(t[0].commit.author.date).toLocaleDateString("en-US"):"No commits";document.getElementById(`lastCommit_${a.name}`).textContent=e})).catch((t=>{console.error("Error fetching commits:",t),document.getElementById(`lastCommit_${a.name}`).textContent="Unable to fetch last commit"}))}},r=(t,e)=>{let n=t.length>0?new Date(t[0].commit.author.date).toLocaleDateString("en-US"):"No commits";document.getElementById(`lastCommit_${e}`).textContent=n,document.getElementById(`commitsSince_${e}`).textContent=t.length},s=a=>{const o=`githubFiles_${t}_${a.name}`,i=JSON.parse(localStorage.getItem(o));i&&Date.now()-i.timestamp<n?c(i.data,a.name):fetch(`https://api.github.com/repos/${t}/${a.name}/contents`,{headers:{Authorization:`token ${e}`}}).then((t=>t.json())).then((t=>{t.sort(((t,e)=>"dir"===t.type&&"dir"!==e.type?-1:"dir"!==t.type&&"dir"===e.type?1:0)),localStorage.setItem(o,JSON.stringify({data:t,timestamp:Date.now()})),c(t,a.name)})).catch((t=>{console.error("Error fetching files:",t),document.getElementById(`files_${a.name}`).innerHTML="<li>Unable to fetch files</li>"}))},c=(t,e)=>{let n=t.map((t=>"dir"===t.type?`<li><i class="fas fa-folder"></i> ${t.name}</li>`:"file"===t.type&&t.name.endsWith(".md")?`<li><i class="fab fa-markdown"></i> ${t.name}</li>`:"file"===t.type&&(t.name.endsWith(".Rmd")||t.name.endsWith(".Rproj"))?`<li><i class="fab fa-r-project"></i>${t.name}</li>`:`<li><i class="bi bi-file-earmark-code"></i>${t.name}</li>`)).join("");document.getElementById(`files_${e}`).innerHTML=n}})()})();